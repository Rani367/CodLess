#pragma once
#define BUILD_VERSION "@CMAKE_PROJECT_VERSION@"
#define BUILD_TIMESTAMP "@CMAKE_CURRENT_TIMESTAMP@"
#define BUILD_COMMIT_HASH "@GIT_COMMIT_HASH@"
#define BUILD_BRANCH "@GIT_BRANCH@"
#define BUILD_COMPILER "@CMAKE_CXX_COMPILER_ID@ @CMAKE_CXX_COMPILER_VERSION@"
#define BUILD_SYSTEM "@CMAKE_SYSTEM_NAME@ @CMAKE_SYSTEM_VERSION@"
#define BUILD_PROCESSOR "@CMAKE_SYSTEM_PROCESSOR@"
#define BUILD_TYPE "@CMAKE_BUILD_TYPE@"
#define BUILD_FLAGS "@CMAKE_CXX_FLAGS@"

// Feature flags
#cmakedefine ENABLE_SANITIZERS
#cmakedefine ENABLE_COVERAGE
#cmakedefine ENABLE_PROFILING
#cmakedefine BUILD_TESTING
#cmakedefine BUILD_DOCUMENTATION
#cmakedefine BUILD_BENCHMARKS

// Qt version info
#define QT_VERSION_USED "@Qt6_VERSION@"

// Useful build information functions
#include <QString>
#include <QDateTime>

namespace BuildInfo {
    inline QString getVersion() { return BUILD_VERSION; }
    inline QString getTimestamp() { return BUILD_TIMESTAMP; }
    inline QString getCommitHash() { return BUILD_COMMIT_HASH; }
    inline QString getBranch() { return BUILD_BRANCH; }
    inline QString getCompiler() { return BUILD_COMPILER; }
    inline QString getSystem() { return BUILD_SYSTEM; }
    inline QString getProcessor() { return BUILD_PROCESSOR; }
    inline QString getBuildType() { return BUILD_TYPE; }
    inline QString getBuildFlags() { return BUILD_FLAGS; }
    inline QString getQtVersion() { return QT_VERSION_USED; }
    
    inline QString getFullBuildInfo() {
        return QString("CodLess %1 (%2)\n"
                      "Built: %3\n"
                      "Commit: %4 (%5)\n"
                      "Compiler: %6\n"
                      "System: %7 (%8)\n"
                      "Qt: %9")
                .arg(getVersion())
                .arg(getBuildType())
                .arg(getTimestamp())
                .arg(getCommitHash())
                .arg(getBranch())
                .arg(getCompiler())
                .arg(getSystem())
                .arg(getProcessor())
                .arg(getQtVersion());
    }
} 